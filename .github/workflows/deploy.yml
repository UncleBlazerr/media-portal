name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: eggystrone/media-portal

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=main-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
            NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}
            NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig.yaml

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Get short SHA
        id: vars
        run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Deploy with Helm
        env:
          KUBECONFIG: kubeconfig.yaml
        run: |
          helm upgrade --install media-portal ./helm/media-portal \
            --set image.tag=main-${{ steps.vars.outputs.short_sha }} \
            --set secrets.firebase.apiKey="${{ secrets.FIREBASE_API_KEY }}" \
            --set secrets.firebase.authDomain="${{ secrets.FIREBASE_AUTH_DOMAIN }}" \
            --set secrets.firebase.projectId="${{ secrets.FIREBASE_PROJECT_ID }}" \
            --set secrets.firebase.storageBucket="${{ secrets.FIREBASE_STORAGE_BUCKET }}" \
            --set secrets.firebase.messagingSenderId="${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" \
            --set secrets.firebase.appId="${{ secrets.FIREBASE_APP_ID }}" \
            --set secrets.firebase.measurementId="${{ secrets.FIREBASE_MEASUREMENT_ID }}" \
            --set secrets.spotify.clientId="${{ secrets.SPOTIFY_CLIENT_ID }}" \
            --set secrets.spotify.clientSecret="${{ secrets.SPOTIFY_CLIENT_SECRET }}" \
            --set secrets.nextauth.secret="${{ secrets.NEXTAUTH_SECRET }}" \
            --set env.nextauthUrl="${{ secrets.NEXTAUTH_URL }}" \
            --wait \
            --timeout 5m

      - name: Verify deployment
        env:
          KUBECONFIG: kubeconfig.yaml
        run: |
          kubectl rollout status deployment/media-portal
          kubectl get pods -l app.kubernetes.io/name=media-portal
